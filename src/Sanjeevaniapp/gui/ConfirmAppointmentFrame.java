package Sanjeevaniapp.gui;

import Sanjeevaniapp.Dao.AppointmentDao;
import Sanjeevaniapp.pojo.AppointmentPojo;
import Sanjeevaniapp.utility.SmsSender;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import Sanjeevaniapp.utility.Sender;

/**
 *
 * @author HP
 */
public class ConfirmAppointmentFrame extends javax.swing.JFrame {

    private AppointmentPojo app;

    public ConfirmAppointmentFrame() {
        initComponents();
        setLocationRelativeTo(null);
    }

    public ConfirmAppointmentFrame(AppointmentPojo app) {
        this();
        this.app = app;
        txtPatientId.setText(app.getPatientId());
        txtPatientName.setText(app.getPatientName());
        txtOpd.setText(app.getOpd());
        txtAppointmentDate.setText(app.getAppointmentDate());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jSeparator9 = new javax.swing.JSeparator();
        jSeparator10 = new javax.swing.JSeparator();
        jSeparator11 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        txtPatientId = new javax.swing.JTextField();
        txtOpd = new javax.swing.JTextField();
        txtPatientName = new javax.swing.JTextField();
        jLabel111 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        jLabel113 = new javax.swing.JLabel();
        jLabel114 = new javax.swing.JLabel();
        btnBack2 = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnCONFIRM = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtAppointmentDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jSeparator12 = new javax.swing.JSeparator();
        jLabel9 = new javax.swing.JLabel();
        dateSpinner = new javax.swing.JSpinner();
        jSeparator13 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel3.add(jSeparator9, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 78, 430, -1));

        jSeparator10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel3.add(jSeparator10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 476, 1160, -1));

        jSeparator11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        jPanel3.add(jSeparator11, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 540, 80));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel5.setText("Sanjeevani Application");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 440, 60));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Sanjeevaniapp/icons/HomePageBG.jpg"))); // NOI18N
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -230, 1170, 700));

        jPanel13.setBackground(new java.awt.Color(170, 210, 210));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtPatientId.setEditable(false);
        txtPatientId.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtPatientId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientIdActionPerformed(evt);
            }
        });
        jPanel13.add(txtPatientId, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 230, -1));

        txtOpd.setEditable(false);
        txtOpd.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel13.add(txtOpd, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 230, -1));

        txtPatientName.setEditable(false);
        txtPatientName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel13.add(txtPatientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 100, 410, -1));

        jLabel111.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel111.setText("Appointment Confirmation");
        jPanel13.add(jLabel111, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 330, 41));

        jLabel112.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel112.setText("Patient Name");
        jPanel13.add(jLabel112, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 100, 160, -1));

        jLabel113.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel113.setText("Patient ID");
        jPanel13.add(jLabel113, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, -1, -1));

        jLabel114.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel114.setText("OPD");
        jPanel13.add(jLabel114, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, -1));

        btnBack2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack2.setForeground(new java.awt.Color(0, 153, 153));
        btnBack2.setText("BACK");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });
        jPanel13.add(btnBack2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, -1, -1));

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(0, 153, 153));
        btnCancel.setText("CANCEL");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel13.add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 250, -1, -1));

        btnCONFIRM.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCONFIRM.setForeground(new java.awt.Color(0, 153, 153));
        btnCONFIRM.setText("CONFIRM");
        btnCONFIRM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCONFIRMActionPerformed(evt);
            }
        });
        jPanel13.add(btnCONFIRM, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 250, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel7.setText("Appointment Date");
        jPanel13.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 150, -1, -1));

        txtAppointmentDate.setEditable(false);
        txtAppointmentDate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jPanel13.add(txtAppointmentDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 150, 410, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel8.setText("Patient Details");
        jPanel13.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 180, 30));

        jSeparator12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel13.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 1110, 140));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel9.setText("Appointment Scheduled-");
        jPanel13.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        dateSpinner.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        dateSpinner.setModel(new javax.swing.SpinnerDateModel());
        jPanel13.add(dateSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 210, 860, -1));

        jSeparator13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel13.add(jSeparator13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 1140, 280));

        jPanel3.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 1160, 300));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 789, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        AppointmentsRequestFrame AR = new AppointmentsRequestFrame();
        AR.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        try {
            boolean result = AppointmentDao.updateStatus(app);
            app.setStatus("CANCEL");
            JOptionPane.showMessageDialog(this, "Appointment is successfully cancel");
            if (result) {
                Sender obj = new SmsSender();
                String msg = "Hello " + app.getPatientName() + "\nyour appointment is cancel";
                boolean smsResult = obj.send(app.getMobileNo(), msg);
                if (smsResult) {
                    JOptionPane.showMessageDialog(this, "Message Sent");
                } else {
                    JOptionPane.showMessageDialog(this, "Message Failed");
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "DB Error");
            ex.printStackTrace();
        } catch (Exception ex2) {
            JOptionPane.showMessageDialog(this, "Error In Sending SMS" + ex2.getMessage());
            System.out.println("print error message : " + ex2.getMessage());
            ex2.printStackTrace();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnCONFIRMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCONFIRMActionPerformed
        String dateStr = dateSpinner.getValue().toString();
        JOptionPane.showMessageDialog(this, dateStr);
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("E MMM dd HH:mm:ss z yyyy");
        LocalDateTime appDateTime = LocalDateTime.parse(dateStr, dtf);
        LocalDateTime currDateTime = LocalDateTime.now();

        int ans = appDateTime.compareTo(currDateTime);
        if (ans > 0) {
            DateTimeFormatter dtf2 = DateTimeFormatter.ofPattern("dd/MM/yy hh:mm:ss a");
            String appDateTimeStr = appDateTime.format(dtf2);
            app.setAppointmentDate(appDateTimeStr);
            app.setStatus("CONFIRM");
            try {
                boolean result = AppointmentDao.updateStatus(app);
                if (result) {
                    Sender obj = new SmsSender();
                    String msg = "Hello " + app.getPatientName() + "\nYour appointment is fixed at " + appDateTimeStr + " with Dr. " + app.getDoctorName();
                    boolean smsResult = obj.send(app.getMobileNo(), msg);

                    if (smsResult) {

                        JOptionPane.showMessageDialog(this, "Message Sent");
                    } else {
                        JOptionPane.showMessageDialog(this, "Message Sent");
//                      "Message Sending Failed"
                    }

                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "DB Error");
                ex.printStackTrace();
            } catch (Exception ex2) {
                JOptionPane.showMessageDialog(this, "Error In Sending SMS");
                ex2.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Appointment should be after current time");
        }
    }//GEN-LAST:event_btnCONFIRMActionPerformed

    private void txtPatientIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfirmAppointmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfirmAppointmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfirmAppointmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfirmAppointmentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfirmAppointmentFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnCONFIRM;
    private javax.swing.JButton btnCancel;
    private javax.swing.JSpinner dateSpinner;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator11;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator13;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTextField txtAppointmentDate;
    private javax.swing.JTextField txtOpd;
    private javax.swing.JTextField txtPatientId;
    private javax.swing.JTextField txtPatientName;
    // End of variables declaration//GEN-END:variables
}
